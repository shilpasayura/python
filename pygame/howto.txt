
Command to install pygame:

pip install pygame


pygame.draw.circle 
drawing a circle around a point.

pygame.draw.rect
drawing a rectangle shape.

pygame.draw.polygon
drawing a shape with any number of sides.

pygame.draw.ellipse 
drawing a round shape inside a rectangle.

pygame.draw.line
drawing a straight line.

pygame.draw.arc
draws a partial section of an ellipse.

pygame.draw.lines
draws the multiple contiguous line segments.


Creating a window

import pygame  
pygame.init()  
scr = pygame.display.set_mode((600,500))  
pygame.display.set_caption('Pygame Window')
done = False  
while not done:  
    for event in pygame.event.get():  
        if event.type == pygame.QUIT:  
            done = True  
pygame.display.flip()  



import pygame
pygame.init() 
scr = pygame.display.set_mode()
x, y = scr.get_size() 
pygame.display.quit() 
print(x, y) 



import pygame 
scr = pygame.display.set_mode((500, 400),pygame.RESIZABLE) 
pygame.display.set_caption('Resizable Window') 
running = True
while running: 
    for event in pygame.event.get(): 
        if event.type == pygame.QUIT: 
            running = False
pygame.quit() 


Draw a circle using python pygame

import pygame
pygame.init()
scr = pygame.display.set_mode((600, 500))
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
    scr.fill((255, 255, 255))
    pygame.draw.circle(scr, (200, 0, 0), (250, 250), 80)
    pygame.display.flip()
pygame.quit()


How to draw a rectangle in pygame window.

import pygame 
pygame.init() 
scr = pygame.display.set_mode((500,500)) 
color = (0,0,255) 
pygame.draw.rect(scr, color, pygame.Rect(60, 60, 100, 100)) 
pygame.display.flip() 
while True:
  pass

Drawing a Line

import pygame 
pygame.init() 
scr = pygame.display.set_mode((500,500)) 
color = (0,255,0) 
pygame.draw.line(scr, color, (40, 300), (140, 300), 6)
pygame.display.flip() 
while True:
  pass

Drawing a an ellipse

import pygame 
pygame.init() 
scr = pygame.display.set_mode((500,500)) 
white = (255,255,255) 
pygame.draw.ellipse(scr, white , (350, 250, 60, 90), 4)
pygame.display.flip() 
while True:
  pass

Draw Polygon

import pygame 
pygame.init() 
scr = pygame.display.set_mode((600,500)) 
purple = (102, 0, 102) 
pygame.draw.polygon(scr, purple, 
                    ((146, 0), (291, 106),(236, 277), (56, 277), (0, 106))) 
pygame.display.flip() 
while True:
  pass

triangle

import pygame 
pygame.init() 
scr = pygame.display.set_mode((500,500)) 
lightgreen = (0, 255, 0) 
pygame.draw.polygon(scr, lightgreen, ((100, 100), (0, 200),(200, 200)), 3) 
pygame.display.flip() 
while True:
  pass


Arc

import pygame 
pygame.init() 
scr = pygame.display.set_mode((500,500))
pi = 3.14 
white = (255, 255, 255) 
pygame.draw.arc(scr, white, [210, 100, 250, 200], 0, pi / 2, 2)  
pygame.display.flip() 
while True:
  pass

Text 

import pygame, sys
pygame.init()
screen = pygame.display.set_mode((500, 400))
font = pygame.font.SysFont('arial', 18)
new_font = pygame.font.SysFont('Timesnewroman', 25)
new_font2 = pygame.font.SysFont('impact', 70)
text = font.render("Welcome to Pygame!",True, (0,255,0))
fun = new_font.render("Enjoy with games", True, (0,255,255))
game_end = new_font2.render("Game Ends", True, (255,0,0))
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit() 
    screen.fill((255, 255, 255)) 
    screen.blit(text, (40,60))
    screen.blit(fun, (40,90))
    screen.blit(game_end, (40,140))
    pygame.display.flip()




move an object in pygame

import pygame   
pygame.init()  
window = pygame.display.set_mode((600, 600)) 
pygame.display.set_caption("Moving Object") 
x = 200
y = 200
width = 20
height = 20
vel = 10
run = True
while run: 
    pygame.time.delay(10) 
    for event in pygame.event.get(): 
        if event.type == pygame.QUIT: 
            run = False
    keys = pygame.key.get_pressed() 
    if keys[pygame.K_LEFT] and x>0: 
        x -= vel 
    if keys[pygame.K_RIGHT] and x<600-width: 
        x += vel 
    if keys[pygame.K_UP] and y>0: 
        y -= vel 
    if keys[pygame.K_DOWN] and y<600-height: 
        y += vel 
    window.fill((0, 0, 0)) 
    pygame.draw.rect(window, (255, 0, 0), (x, y, width, height)) 
    pygame.display.update()  
pygame.quit() 


import pygame 
pygame.init()   
window = pygame.display.set_mode((600, 600)) 
pygame.display.set_caption("Drawing Design") 
x = 300
y = 300
width = 20
height = 20
vel = 10
run = True
while run:  
    pygame.time.delay(10)  
    for event in pygame.event.get(): 
        if event.type == pygame.QUIT: 
            run = False
    keys = pygame.key.get_pressed() 
    if keys[pygame.K_LEFT] and x > 0: 
        x -= vel 
    if keys[pygame.K_RIGHT] and x < 600 - width: 
        x += vel 
    if keys[pygame.K_UP] and y > 0: 
        y -= vel 
    if keys[pygame.K_DOWN] and y < 600 - height: 
        y += vel 
    pygame.draw.rect(window, (255, 255, 255), (x, y, width, height)) 
    pygame.display.update() 
pygame.quit()  



Transpform scale

import pygame 
pygame.init()  
pygame.display.set_caption('Image Scale')  
img = pygame.image.load("ball.png") 
img = pygame.transform.scale(img,(400,400))
display = pygame.display.set_mode((500,500))
display.blit(img,[0,0])
pygame.display.update() 
while True:
  pass



import pygame 
pygame.init()  
pygame.display.set_caption('Image')  
img = pygame.image.load("ball.png") 
display = pygame.display.set_mode((600,600))
display.blit(img,[0,0])
pygame.display.update() 
while True:
  pass
Display an image in python pygame


import pygame 
pygame.init()  
pygame.display.set_caption('Image')  
img = pygame.image.load("robotic.jpg") 
display = pygame.display.set_mode((600,600))
display.blit(img,[0,0])
pygame.display.update() 
while True:
  pass


Resize the image in python pygame

import pygame 
pygame.init()  
pygame.display.set_caption('Image')  
img = pygame.image.load("robotic.jpg") 
img = pygame.transform.scale(img,(500,500))
display = pygame.display.set_mode((600,600))
display.blit(img,[0,0])
pygame.display.update() 
while True:
  pass

How to add background image in python pygame

pygame.init()  
pygame.display.set_caption('Pygame Window')  
background = pygame.image.load("background.jpeg") 
background = pygame.transform.scale(background,(500,500))
display = pygame.display.set_mode((500,500))
display.blit(background,[0,0])
pygame.display.update() 
while True:
  pass


import pygame 
pygame.init()  
pygame.display.set_caption('Pygame Window')  
background = pygame.image.load("background.jpeg") 
img = pygame.image.load("Image.png") 
background = pygame.transform.scale(background,(500,500))
img = pygame.transform.scale(img,(200,200))
display = pygame.display.set_mode((500,500))
display.blit(background,[0,0])
display.blit(img,[150,150])
pygame.display.update() 
while True:
  pass


Background Color

import pygame
pygame.init() 
bg = pygame.display.set_mode((500,400)) 
color = (255,155, 0)
bg.fill(color) 
pygame.display.flip()
while True:
  pass

Pygame Quit

import pygame, sys
from pygame.locals import *
pygame.init()
win = pygame.display.set_mode((500, 400))
pygame.display.set_caption('Pygame')
while True: 
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
    pygame.display.update()

Color Effect

import pygame
import random
import sys
pygame.init()
scr = pygame.display.set_mode((700,650))
a1 = random.randint(0,255)
a2 = random.randint(0,255)
a3 = random.randint(0,255)
clock = pygame.time.Clock()
while True:
    for e in pygame.event.get():
        if e.type == pygame.QUIT:
            pygame.quit()
    if 0 < a1 < 255:
        a1 += 1
    elif a1 >= 255:
        a1 -= 255
    elif a1 <= 0:
        a1 += 3
    clock.tick(60)
    scr.fill((a1,a2,a3))
    pygame.display.update()


receiving mouse input when we click on the image.

import pygame
pygame.init()
w=550;
h=400
scr = pygame.display.set_mode( (w, h) )
pygame.display.set_caption('click on image')
image = pygame.image.load("img.jpg").convert()
x = 20;
y = 30; 
scr.blit(image, (x,y))
pygame.display.flip()
running = True
while (running):
    for e in pygame.event.get():
        if e.type == pygame.QUIT:
            running = False
        if e.type == pygame.MOUSEBUTTONDOWN:
            x, y = e.pos
            if image.get_rect().collidepoint(x, y):
                print('clicked on image')
pygame.quit()


superimposing the text onto  button.


import pygame 
import sys  
pygame.init() 
s = (600, 500)
screen = pygame.display.set_mode(s)
color_white = (255,255,255) 
color_light = (180,180,180) 
color_dark = (110,110,110) 
width = screen.get_width()
height = screen.get_height()  
smallfont = pygame.font.SysFont('Arial',30) 
text = smallfont.render('Quit' , True , color_white) 
while True:     
    for e in pygame.event.get():      
        if e.type == pygame.QUIT: 
            pygame.quit()      
        if e.type == pygame.MOUSEBUTTONDOWN: 
            if width/2 <= mouse[0] <= width/2+140 and height/2 <= mouse[1] <= height/2+40: 
                pygame.quit() 
    screen.fill((0,0,0)) 
    mouse = pygame.mouse.get_pos() 
    if width/2 <= mouse[0] <= width/2+140 and height/2 <= mouse[1] <= height/2+40: 
        pygame.draw.rect(screen,color_light,[width/2,height/2,140,40]) 
    else: 
        pygame.draw.rect(screen,color_dark,[width/2,height/2,140,40]) 
    screen.blit(text , (width/2+50,height/2)) 
    pygame.display.update() 

audio

from pygame import mixer  
mixer.init() 
mixer.music.load("hello.ogg") 
mixer.music.set_volume(0.5) 
mixer.music.play() 
while True: 
    print("Press 'p' to pause, 'r' to resume") 
    print("Press 'e' to end the program") 
    enter = input("  ") 
    if enter == 'p': 
        mixer.music.pause()      
    elif enter == 'r': 
        mixer.music.unpause() 
    elif enter == 'e': 
        mixer.music.stop() 
        break



how fast the game should run.


import pygame, sys
from pygame.locals import *
pygame.init()
FPS = 20
fpsClock = pygame.time.Clock()
Displaysrf = pygame.display.set_mode((700, 600), 0, 20)
pygame.display.set_caption('Animation')
white = (255, 255, 255)
dImg = pygame.image.load('walk1.png')
dx = 10
dy = 10
direction = 'right'
while True:
    Displaysrf.fill(white)
    if direction == 'right':
        dx += 5
        if dx == 280:
            direction = 'down'
    elif direction == 'down':
        dy += 5
        if dy == 220:
            direction = 'left'
    elif direction == 'left':
        dx -= 5
        if dx == 10:
            direction = 'up'
    elif direction == 'up':
        dy -= 5
        if dy == 10:
            direction = 'right'
    Displaysrf.blit(dImg, (dx, dy))
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
    pygame.display.update()
    fpsClock.tick(FPS)



Animation

import pygame
import random
pygame.init()
black = [0, 0, 0]
white = [255, 255, 255]
size = [600, 400]
scr = pygame.display.set_mode(size)
pygame.display.set_caption("Snow Animation")
snow_list = []
for i in range(50):
    x = random.randrange(0, 700)
    y = random.randrange(0, 600)
    snow_list.append([x, y])
clock = pygame.time.Clock()
done = False
while not done:
    for event in pygame.event.get(): 
        if event.type == pygame.QUIT:  
            done = True  
    scr.fill(black)
    for i in range(len(snow_list)):
        pygame.draw.circle(scr, white, snow_list[i], 2)
        snow_list[i][1] += 1
        if snow_list[i][1] > 400:
            y = random.randrange(-50, -10)
            snow_list[i][1] = y
            x = random.randrange(0, 400)
            snow_list[i][0] = x
    pygame.display.flip()
    clock.tick(20)
pygame.quit()


import pygame
import sys
from pygame.locals import *
Green = (0, 255, 0)
Black = (0, 0, 0)
FPS = 50
fpsClock = pygame.time.Clock()
x_Pos = 300
y_Pos = 250
x_Vel = -5
y_Vel = 5
pygame.init()
Display= pygame.display.set_mode((500, 400))
pygame.display.set_caption('Animation')
while True:
    Display.fill(Black)
    pygame.draw.circle(Display,Green, (x_Pos, y_Pos), 10, 0)
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
    x_Pos += x_Vel
    y_Pos += y_Vel
    if x_Pos > 490 or x_Pos <10:
        x_Vel *= -1
    if y_Pos >390 or y_Pos <10:
        y_Vel *= -1
    pygame.display.update()
    fpsClock.tick(FPS)


import pygame,sys
pygame.init()
clock = pygame.time.Clock()
scr = pygame.display.set_mode([500,500])
base_font = pygame.font.Font(None,32)
user_text = ""
input_rect = pygame.Rect(200,200,140,32)
color_active = pygame.Color("Green")
color_passive = pygame.Color("yellow")
color = color_passive
active = False
while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        if event.type == pygame.MOUSEBUTTONDOWN:
            if input_rect.collidepoint(event.pos):
                active = True
            else:
                active = False
        if event.type == pygame.KEYDOWN:
            if active == True:
                if event.key == pygame.K_BACKSPACE:
                    user_text = user_text[:-1]
                else:
                    user_text += event.unicode
    scr.fill((0,0,0))
    if active:
        color = color_active
    else:
        color = color_passive
    pygame.draw.rect(scr,color,input_rect,2)
    text_surface = base_font.render(user_text,True,(255,255,255))
    scr.blit(text_surface,(input_rect.x + 5,input_rect.y + 5))
    input_rect.w = max(100,text_surface.get_width() + 10)
    pygame.display.flip()
    clock.tick(50)


animate a ball to move in a sin pattern

